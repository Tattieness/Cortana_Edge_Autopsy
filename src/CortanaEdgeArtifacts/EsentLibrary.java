/* 
 * Copyright (C) 2018 Clare Taylor
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package CortanaEdgeArtifacts;

import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.Structure;
import com.sun.jna.Memory;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.win32.StdCallLibrary;
import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.List;

/**
 * JNA Wrapper for library <b>esent</b><br>
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 * <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 * <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface EsentLibrary extends StdCallLibrary {

    public static final String JNA_LIBRARY_NAME = "esent";
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(EsentLibrary.JNA_LIBRARY_NAME);
    public static final EsentLibrary INSTANCE = Native.loadLibrary(EsentLibrary.JNA_LIBRARY_NAME, EsentLibrary.class);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLVCorrupted = -1526;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableCreateTemplateTable = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoIndexId = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoSpaceOwned = 10;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTransTooDeep = -1103;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoList = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypMax = 14;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnUserDefinedDefault = 0x00008000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexColumnMustBeNonNull = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidBookmark = -1045;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoSpaceAlloc = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_sntRequirements = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseSignInUse = -1222;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLanguageNotSupported = -1619;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTermAbrupt = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnTagged = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypFreeCursorLS = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_OnlineDefragAll = 0xffff;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexTupleLimits = 0x00002000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordNoCopy = -1602;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSPAvailExtCorrupted = -341;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRunningInOneInstanceMode = -1080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInstanceNameInUse = -1086;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseFileReadOnly = -1008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPermissionDenied = -1809;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoRvt = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTSortNullsHigh = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidFilename = -1044;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseInvalidPath = -1217;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnSkipped = 1531;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIdleFlushBuffers = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadLogVersion = -514;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoTransactions = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTablePreread = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoOLC = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnTooBig = -1506;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTUnique = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitObjectSystem = 0x80000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCacheSizeMax = 23;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitLSCursor = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoMisc = 14;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoSysTabCursor = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogFilePathInUse = -1084;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramAccessDeniedRetryPeriod = 53;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexDisallowNull = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotBeTagged = -1521;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfSessions = -1101;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDeleteColumnIgnoreTemplateColumns = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errAlreadyPrepared = -1607;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errKeyNotMade = -1608;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexSortNullsHigh = 0x00000400;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOneDatabasePerSession = -1916;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveIgnoreDefault = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveFromPrimaryBookmark = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDbTimeTooNew = -567;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidPath = -1023;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSuccess = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTempFileOpenError = -1803;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepInsert = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnNoWriteLock = 1067;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitMoveFirst = 0x00000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramStopFlushThreshold = 32;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInternalError = -107;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfo = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRangeInstantDuration = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyOpenDatabases = -1027;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNoCurrentRecord = -1603;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordTooBigForBackwardCompatibility = -1112;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEnableTempTableVersioning = 46;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errUnicodeTranslationBufferTooSmall = -601;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbSecondaryKeyMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnUpdatable = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogTornWriteDuringHardRecovery = -571;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRedoAbruptEnded = -536;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfCursors = -1013;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexColumnMustBeNull = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramAlternateDatabaseRecoveryPath = 113;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetUniqueNormalizedMultiValues = 0x00000100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileCompressed = -4005;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxVerPages = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPatchFileMissing = -538;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyColumns = -1040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramStartFlushThreshold = 31;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramNoInformationEvent = 50;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoLCID = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidBufferSize = -1047;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpUpgrade = 10;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ccolKeyMost = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitFullColumnEndLimit = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseUnavailable = -1091;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errObjectNotFound = -1305;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_sntComplete = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnSingleValue = 1536;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbReadOnly = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogBuffers = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetAppendLV = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogSectorSizeMismatchDatabasesConsistent = -547;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidObject = -1316;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnTableEmpty = 1301;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitLSReset = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableInfoUpdatable = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnNotFound = -1507;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIdleStatus = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogSequenceEndDatabasesConsistent = -548;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errVersionStoreOutOfMemory = -1069;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnNotUpdatable = -1048;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDbTimeCorrupted = -344;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramIndexTuplesLengthMax = 111;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSessionInUse = -1914;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidParameter = -1003;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingPatchPage = -534;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyMempoolEntries = -1073;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnRecordFoundGreater = 1039;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnCorruptIndexDeleted = 1415;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitNormalizedKey = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_dbstateJustCreated = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNoCurrentIndex = -1515;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnIndexed = -1505;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveTag = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramTempPath = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTaskDropped = -106;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errGivenLogFileHasBadSignature = -555;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoFilesize = 10;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitPartialColumnEndLimit = 0x00000800;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errConsistentTimeMismatch = -551;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNoBackup = -520;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitObjectTableDerived = 0x10000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfFileHandles = -1020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotDeleteSystemTable = -1318;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadSLVSignature = -537;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingRestoreLogFiles = -557;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexLazyFlush = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPreviousVersion = -322;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesOneColumnOnly = -1431;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableCreateNoFixedVarColumnsInDerivedTables = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_dbstateBeingConverted = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetRevertToDefaultValue = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPageNotInitialized = -1019;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramPageFragment = 20;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass9 = 0x00090000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errWriteConflict = -1102;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabase500Format = -1212;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnDefragNotRunning = 2001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitObjectTableNoFixedVarColumnsInDerivedTables = 0x04000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errUnicodeTranslationFail = -602;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypNil = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnDeleteOnZero = 0x00020000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_EventLoggingDisable = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxOpenTables = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass3 = 0x00030000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoSpaceAvailable = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass4 = 0x00040000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass1 = 0x00010000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIllegalOperation = -1312;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass2 = 0x00020000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_OnlineDefragSpaceTrees = 0x0004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass7 = 0x00070000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDbTimeTooOld = -566;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass8 = 0x00080000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass5 = 0x00050000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass6 = 0x00060000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTableDuplicate = -1303;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexDuplicate = -1403;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramZeroDatabaseDuringBackup = 71;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoListNoStats = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingPreviousLogFile = -509;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnFileOpenReadOnly = 1813;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnSortOverflow = 1009;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTScrollable = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errAfterInitialization = -1850;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogSequenceEnd = -519;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnInUse = -1046;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errExclusiveTableLockRequired = -1322;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexUnversioned = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRollbackAll = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTErrorOnDuplicateInsertion = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexTuples = 0x00001000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidCodePage = -1063;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingFileToBackup = -569;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableInfoRollback = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabase200Format = -1210;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpRestore = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOSSnapshotInvalidSequence = -2401;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramOneDatabasePerSession = 102;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInitInProgress = -1031;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotDisableVersioning = -1208;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEventLoggingLevel = 51;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnIllegalNull = -1504;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNullInvalid = -1504;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitObjectTableFixedDDL = 0x40000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBookmarkPermitVirtualCurrency = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbNameMost = 64;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRfsFailure = -100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseBufferDependenciesCorrupted = -255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogReadVerifyFailure = -612;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLSAlreadySet = -3001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexInUse = -1051;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidColumnType = -1511;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordPrimaryChanged = -1604;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnCallbackNotRegistered = 2100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoDBInUse = 15;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveNull = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordDeleted = -1017;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableUpdatable = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadBookmark = -328;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexNotFound = -1404;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetZeroLength = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnUniqueKey = 345;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyInstances = -1214;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepCancel = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogFileSizeMismatch = -541;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEnableIndexCleanup = 54;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_dbstateForceDetach = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitKeyDataZeroLength = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBackupEndNormal = 0x0001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexInvalidDef = -1406;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCreatePathIfNotExist = 100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidDatabase = -1028;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitObjectTableTemplate = 0x20000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetIndexRange = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypLongText = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnCopyLongValue = 1520;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDerivedColumnCorruption = -1529;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnTTKey = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMultiValuedDuplicate = -1525;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramRecordUpgradeDirtyLevel = 78;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitUpdateCheckESE97Compatibility = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOSSnapshotTimeOut = -2402;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLRUKHistoryMax = 26;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesCannotRetrieveFromIndex = -1436;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileIOAbort = -4002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnTableInUseBySystem = 1327;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnExistingLogFileIsNotContiguous = 559;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRunningInMultiInstanceMode = -1081;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbShadowingOff = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errEndingRestoreLogTooLow = -553;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBackupSnapshot = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCheckpointFileNotFound = -542;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableDenyWrite = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoSpaceUsage = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMultiValuedDuplicateAfterTruncation = -1528;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnDataHasChanged = 1610;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRollbackRequired = -1109;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypBeforeInsert = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNullKeyDisallowed = -1053;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRecordInIndex = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitForceCloseAndDetach = (0x00000002 | 0x00000001);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotNestDDL = -1325;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidLogSequence = -515;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSessionContextAlreadySet = -1912;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitForceDetach = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errVersionStoreEntryTooBig = -1065;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypShort = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnRedundant = -1510;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEventLogCache = 99;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRestoreOfNonBackupDatabase = -615;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesKeyTooSmall = -1437;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoResetOLC = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSoftRecoveryOnBackupDatabase = -544;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoUpgrade = 13;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogCorruptDuringHardRestore = -573;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMultiValuedColumnMustBeTagged = -1509;
    /** <i>native declaration : esent.h</i>
     */
    public static final int cObjectInfoCols = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass14 = 0x000E0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass15 = 0x000F0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass10 = 0x000A0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass11 = 0x000B0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass12 = 0x000C0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClass13 = 0x000D0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitStrLimit = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCacheSize = 41;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoListSortColumnid = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDefaultValueTooBig = -1524;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCacheSizeMin = 60;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoMostMany = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnTruncated = 1534;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errEntryPointNotFound = -1911;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBackupIncremental = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogFileCreateAsynch = 69;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoListACM = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypDateTime = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxTemporaryTables = 10;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogBufferTooSmall = -517;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileAccessDenied = -1032;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotDeleteTemplateTable = -1319;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexIgnoreAnyNull = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRequiredLogFilesMissing = -543;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogFileSizeMismatchDatabasesConsistent = -545;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFixedDDL = -1323;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexUnicode = 0x00000800;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLoggingDisabled = -516;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMakeBackupDirectoryFail = -525;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesSecondaryIndexOnly = -1430;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTForwardOnly = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumerateTaggedOnly = 0x00040000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadParentPageLink = -338;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTForceMaterialization = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyOpenIndexes = -1410;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errAlreadyInitialized = -1030;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbUpgrade = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoOLC = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMultiValuedIndexViolation = -1411;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpScrub = 11;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypUserDefinedDefaultValue = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfDbtimeValues = -1077;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxSessions = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbDeleteCorruptIndexes = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfObjectIDs = -1074;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRangeUpperLimit = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSoftRecoveryOnSnapshot = -581;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnPresent = 1535;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoSysTabCursor = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidDatabaseVersion = -1209;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramOSSnapshotTimeout = 82;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnRecordFoundLess = 1039;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTableInUse = -1304;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogFilePath = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoOptions = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseInUse = -1202;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfMemory = -1011;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidCreateIndex = -1409;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errKeyBoundary = -324;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoCp = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errExistingLogFileIsNotContiguous = -611;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_OnlineDefragDisable = 0x0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCatalogCorrupted = -1220;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnNoChunk = -1502;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTempPathInUse = -1085;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramPageHintCacheSize = 101;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordNotDeleted = -1072;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileIOBeyondEOF = -4001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnMultiValued = 0x00000400;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadBackupDatabaseSize = -561;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnSeekNotEqual = 1039;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errUnicodeNormalizationNotSupported = -603;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexIgnoreNull = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordTooBig = -1026;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnEscrowUpdate = 0x00000800;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDeleteBackupFileFail = -524;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnNotNULL = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errGivenLogFileIsNotContiguous = -556;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepReplace = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableCreateFixedDDL = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogFileSize = 11;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypAfterReplace = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errReadVerifyFailure = -1018;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepReplaceNoLock = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_objtypNil = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpRepair = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexCantBuild = -1401;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypCurrency = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSLVReadVerifyFailure = -613;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesVarSegMacNotAllowed = -1434;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitLSTable = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumerateIgnoreUserDefinedDefault = 0x00100000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseIdInUse = -1218;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnVersion = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfAutoincrementValues = -1076;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLSCallbackNotSpecified = -3000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyAttachedDatabases = -1805;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitCommitLazyFlush = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypNull = 0x00000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnTTDescending = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnSkipThisRecord = 564;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnInRelationship = -1519;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSeekEQ = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadDbSignature = -531;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitNewKey = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepInsertCopyDeleteOriginal = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoSpaceOwned = 11;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBackupNotAllowedYet = -523;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoList = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInstanceUnavailable = -1090;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_BASE_NAME_LENGTH = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTablePermitDDL = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnBufferTruncated = 1006;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitNoMove = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBackupInProgress = -505;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBackupAtomic = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbLVDefaultValueMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnNyi = -1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRollbackError = -1917;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTransReadOnly = -1110;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableSequential = 0x00008000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramPreferredVerPages = 63;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotMaterializeForwardOnlySort = -1113;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyActiveUsers = -1059;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_MovePrevious = (-1);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errStreamingDataNotLogged = -549;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveFromIndex = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpCompact = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClassNone = 0x00000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBufferTooSmall = -1038;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogGenerationMismatch = -513;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnRemainingVersions = 321;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypFinalize = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_MoveFirst = (0x80000000);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseInconsistent = -550;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnTargetInstanceRunning = 578;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInstanceUnavailableDueToFatalLogDiskFull = -1092;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSeekGE = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnNoErrorInfo = 1055;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIdleCompact = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errStartingRestoreLogTooHigh = -554;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramSystemPath = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramWaitLogFlush = 13;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpBackup = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseSharingViolation = -1215;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEventSourceKey = 49;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidLoggedOperation = -500;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLRUKTrxCorrInterval = 29;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbRecoveryOff = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseCorruptedNoRepair = -1224;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseInvalidPages = -1205;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitCompactRepair = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoBase = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInTransaction = -1108;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSPAvailExtCacheOutOfMemory = -342;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoDbid = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveLongValueRefCount = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoIsam = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoRulesLoaded = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRecordNotInIndex = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotAddFixedVarColumnToDerivedTable = -1330;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypBeforeReplace = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordNotFound = -1601;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnNull = 1004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnLong = -1501;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileInvalidType = -1812;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbPrimaryKeyMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseDirtyShutdown = -550;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadRestoreTargetInstance = -577;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramIgnoreLogVersion = 47;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadItagSequence = -1518;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_MAX_COMPUTERNAME_LENGTH = 15;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFeatureNotAvailable = -1001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypIEEEDouble = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidSystemPath = -1024;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogWaitingUserMax = 15;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBackupDirectoryNotEmpty = -504;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramUnicodeIndexDefault = 72;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSessionWriteConflict = -1111;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfThreads = -103;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnSeparateLongValue = 406;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTermInProgress = -1000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitKeyDescending = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnIdleFull = 1908;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFixedInheritedDDL = -1324;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ExceptionNone = 0x0002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadColumnId = -1517;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoResetOLC = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyIndexes = -1015;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDefragmentBatchStart = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseInvalidName = -1204;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPageBoundary = -323;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnUnversioned = 0x00001000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoCount = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errKeyDuplicate = -1605;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManySplits = -1909;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbKeyMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnNotLocal = 1532;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadCheckpointSignature = -532;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEnableIndexChecking = 45;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitFullColumnStartLimit = 0x00000100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoLangid = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoTemplateTableName = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidPlaceholderColumn = -1530;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypText = 10;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDefragmentBatchStop = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableClassMask = 0x000F0000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDDLNotInheritable = -1326;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_EventLoggingLevelMax = 100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errClientRequestToStopJetService = -1329;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramRecovery = 34;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileNotFound = -1811;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingCurrentLogFiles = -565;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRangeRemove = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnExistingLogFileHasBadSignature = 558;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramIndexTuplesToIndexMax = 112;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoSpaceAlloc = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadPatchPage = -535;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errWriteConflictPrimaryIndex = -1105;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypIEEESingle = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEventSource = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramPageTempDBMin = 19;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSessionContextNotSetByThisThread = -1913;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitMoveKeyNE = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitWaitLastLevel0Commit = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumerateCompressOutput = 0x00080000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogFileCorrupt = -501;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDensityInvalid = -1307;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOSSnapshotNotAllowed = -2403;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbColumnLVPageOverhead = 82;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileIORetry = -4003;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManySorts = -1701;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSeekGT = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoLangid = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveLongId = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfo = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetOverwriteLV = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDataHasChanged = -1611;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoCountry = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnDatabaseRepaired = 595;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidGrbit = -900;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitKeyAscending = 0x00000000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfSequentialIndexValues = -1078;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotDeleteTempTable = -1317;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbExclusive = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxInstances = 104;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadLogSignature = -530;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfo = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramEnableOnlineDefrag = 35;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexPrimary = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoCollate = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMustDisableLoggingForDbUpgrade = -575;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidBackup = -526;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnFinalize = 0x00004000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidOperation = -1906;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLRUKTimeout = 28;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesTextColumnsOnly = -1433;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexBuildCorrupted = -1412;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_sntFail = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_sntBegin = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTaggedNotNULL = -1514;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexMustStay = -1405;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLSNotSet = -3002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSecondaryIndexCorrupted = -1414;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errBadPageLink = -327;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogDiskFull = -529;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNotInitialized = -1029;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypAfterDelete = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTUpdatable = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidCountry = -1061;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesInvalidLimits = -1435;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecoveredWithErrors = -527;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyOpenTables = -1311;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTermComplete = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_OnlineDefragAllOBSOLETE = 0x0001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errObjectDuplicate = -1314;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramDatabasePageSize = 64;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNTSystemCallFailed = -334;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramMaxCursors = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypUnsignedByte = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogTornWriteDuringHardRestore = -570;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseStreamingFileMismatch = -540;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypAfterInsert = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramErrorToString = 70;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_snpUpgradeRecordFormat = 12;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetSizeLV = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexEmpty = 0x00000100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotLogDuringRecoveryRedo = -512;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabasesNotFromSameSnapshot = -580;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramBaseName = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSystemPathInUse = -1083;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCheckpointCorrupt = -533;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidDatabaseId = -1010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitCheckUniqueness = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramGlobalMinVerPages = 81;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTableNotEmpty = -1308;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_OnlineDefragDatabases = 0x0002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitReplayIgnoreMissingDB = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogCorrupted = -1852;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRestoreInProgress = -506;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbOverwriteExisting = 0x00000200;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbBookmarkMost = 256;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramVersionStoreTaskQueueMax = 105;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetSeparateLV = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errVersionStoreOutOfMemoryAndCleanupTimedOut = -1066;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoFilename = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSubStrLimit = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitPartialColumnStartLimit = 0x00000400;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingLogFile = -528;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramOutstandingIOMax = 30;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDefragmentAvailSpaceTreesOnly = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidOnSort = -1702;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ccolFixedMost = 0x0000007f;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabasePatchFileMismatch = -552;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errAccessDenied = -1907;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnDoesNotFit = -1503;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramPreferredMaxOpenTables = 7;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitDbDeleteUnicodeIndexes = 0x00000400;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_MoveLast = (0x7fffffff);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSessionSharingViolation = -1910;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLRUKPolicy = 27;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRfsNotArmed = -101;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEscrowNoRollback = 0x0001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileClose = -102;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnDefragAlreadyRunning = 2000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRangeInclusive = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexHasPrimary = -1402;
    /** <i>native declaration : esent.h</i>
     */
    public static final int cColumnInfoCols = 14;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidLanguageId = -1062;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseCorrupted = -1206;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidSettings = -1328;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseLogSetMismatch = -539;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidTableId = -1310;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCheckFormatWhenOpenFail = 44;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_prepInsertCopy = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoListCompact = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_dbstateDirtyShutdown = 2;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitWriteLock = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbFullNameMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCommitDefault = 16;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTableLocked = -1302;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLinkNotSupported = -1052;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnFixed = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnKeyChanged = 1618;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSeekLE = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumeratePresenceOnly = 0x00020000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int cIndexInfoCols = 15;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramDeleteOldLogs = 48;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableDenyRead = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitRetrieveCopy = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseNotFound = -1203;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoMax = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNotInTransaction = -1054;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbLimitKeyMost = 256;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidSesid = -1104;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCallbackFailed = -2101;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPartiallyAttachedDB = -1221;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoSpaceAvailable = 11;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnNoIdleActivity = 1058;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypBeforeDelete = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSeekLT = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyIO = -105;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCircularLog = 17;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnMaybeNull = 0x00002000;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errExistingLogFileHasBadSignature = -610;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ccolVarMost = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabase400Format = -1211;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyOpenTablesAndCleanupTimedOut = -1313;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypLong = 4;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errTooManyKeys = -1016;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfo = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumerateCopy = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTermStopBackup = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCannotIndex = -1071;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errUpdateNotPrepared = -1609;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramBatchIOBufferMax = 22;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errRecordFormatConversionFailed = -1915;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTransactionReadOnly = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ccolMost = 0x0000fee0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errIndexTuplesNonUniqueOnly = -1432;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoPageSize = 17;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableNoCache = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPrimaryIndexCorrupted = -1413;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitSetUniqueMultiValues = 0x00000080;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCallbackNotResolved = -2102;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypFreeTableLS = 0x00000400;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramDbExtensionSize = 18;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseIncompleteUpgrade = -563;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSystemParamsAlreadySet = -1082;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableInfoBookmark = 0x00000002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexUnique = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ColInfoByColid = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDiskFull = -1808;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errNoBackupDirectory = -503;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfDatabaseSpace = -1012;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoDumpTable = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errOutOfBuffers = -1014;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_MoveNext = (+1);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSPOwnExtCorrupted = -343;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errCheckpointDepthTooDeep = -614;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnSetNull = 1068;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogCorruptDuringHardRecovery = -574;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoNoStats = 5;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramDisableCallbacks = 65;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypLongBinary = 11;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_sntProgress = 0;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitCompactStats = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramIndexTuplesLengthMin = 110;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTableReadOnly = 0x00000004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidIndexId = -1416;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLogCheckpointPeriod = 14;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypBinary = 9;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errMissingFullBackup = -560;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitReadLock = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseAlreadyUpgraded = -562;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypBit = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errAttachedDatabaseMismatch = -1216;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errKeyIsMade = -1516;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseLocked = -1207;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramRuntimeCallback = 73;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errSPAvailExtCacheOutOfSync = -340;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbtypOnlineDefragCompleted = 0x00000100;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_objtypTable = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitEnumerateIgnoreDefault = 0x00000020;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramExceptionAction = 98;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoConnect = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramDeleteOutOfRangeLogs = 52;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errFileIOFail = -4004;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_dbstateCleanShutdown = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errContainerNotEmpty = -1043;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ccolTaggedMost = (0x0000fee0 - 0x000000ff);
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidLogDirectory = -1025;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitTTIndexed = 0x00000001;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_TblInfoName = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errPageSizeMismatch = -1213;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidName = -1002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidBackupSequence = -521;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDatabaseDuplicate = -1201;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogWriteFail = -510;
//	/** <i>native declaration : esent.h</i> */
    public static final int JET_errOutOfLongValueIDs = -1075;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCheckpointDepthMax = 24;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitBackupEndAbort = 0x0002;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramLRUKCorrInterval = 25;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errColumnDuplicate = -1508;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogDisabledDueToRecoveryFailure = -511;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitColumnAutoincrement = 0x00000010;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoVarSegMac = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errKeyTooBig = -408;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnDatabaseAttached = 1007;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errDiskIO = -1022;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnMaxTruncated = 1512;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoSysTabReadOnly = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_DbInfoVersion = 8;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoList = 1;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitWaitAllLevel0Commit = 0x00000008;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errForceDetachNotAllowed = -1219;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_wrnColumnMoreTags = 1533;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errInvalidLCMapStringFlags = -1064;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_paramCleanupMismatchedLogFiles = 77;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ObjInfoSysTabCursor = 3;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_coltypSLV = 13;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_bitIndexIgnoreFirstNull = 0x00000040;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_cbColumnMost = 255;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_IdxInfoLCID = 6;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_errLogSectorSizeMismatch = -546;
    /** <i>native declaration : esent.h</i>
     */
    public static final int JET_ExceptionMsgBox = 0x0001;

    /**
     * Original signature : <code>JET_ERR JetInit(JET_INSTANCE*)</code><br>
     * <i>native declaration : esent.h:3</i>
     */
    int JetInit(EsentLibrary.JET_INSTANCE pinstance);

    /**
     * Original signature :
     * <code>JET_ERR JetInit2(JET_INSTANCE*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:5</i>
     */
    int JetInit2(EsentLibrary.JET_INSTANCE pinstance, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateInstance(JET_INSTANCE*, const char*)</code><br>
     * <i>native declaration : esent.h:7</i><br>
     *
     * 
     * {@link #JetCreateInstance(esent.EsentLibrary.JET_INSTANCE, java.lang.String)}
     * and
     * {@link #JetCreateInstance(esent.EsentLibrary.JET_INSTANCE, com.sun.jna.Pointer)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetCreateInstance(JET_INSTANCE*, const char*)</code><br>
     * <i>native declaration : esent.h:7</i>
     */
    int JetCreateInstance(PointerByReference pinstance, String szInstanceName);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateInstance2(JET_INSTANCE*, const char*, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:9</i><br>
     *
     * 
     * {@link #JetCreateInstance2(esent.EsentLibrary.JET_INSTANCE, java.lang.String, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetCreateInstance2(esent.EsentLibrary.JET_INSTANCE, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
   
    /**
     * Original signature :
     * <code>JET_ERR JetCreateInstance2(JET_INSTANCE*, const char*, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:9</i>
     */
    int JetCreateInstance2(EsentLibrary.JET_INSTANCE pinstance, String szInstanceName, String szDisplayName, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature : <code>JET_ERR JetTerm(JET_INSTANCE)</code><br>
     * <i>native declaration : esent.h:11</i>
     */
    int JetTerm(Pointer instance);

    /**
     * Original signature :
     * <code>JET_ERR JetTerm2(JET_INSTANCE, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:13</i>
     */
    int JetTerm2(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature : <code>JET_ERR JetStopService()</code><br>
     * <i>native declaration : esent.h:15</i>
     */
    int JetStopService();

    /**
     * Original signature :
     * <code>JET_ERR JetStopServiceInstance(JET_INSTANCE)</code><br>
     * <i>native declaration : esent.h:17</i>
     */
    int JetStopServiceInstance(EsentLibrary.JET_INSTANCE instance);

    /**
     * Original signature : <code>JET_ERR JetStopBackup()</code><br>
     * <i>native declaration : esent.h:19</i>
     */
    int JetStopBackup();

    /**
     * Original signature :
     * <code>JET_ERR JetStopBackupInstance(JET_INSTANCE)</code><br>
     * <i>native declaration : esent.h:21</i>
     */
    int JetStopBackupInstance(EsentLibrary.JET_INSTANCE instance);

    /**
     * Original signature :
     * <code>JET_ERR JetSetSystemParameter(JET_INSTANCE*, JET_SESID, unsigned long, JET_API_PTR, const char*)</code><br>
     * <i>native declaration : esent.h:23</i><br>
     *
     * 
     * {@link #JetSetSystemParameter(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, com.sun.jna.NativeLong, esent.EsentLibrary.JET_API_PTR, java.lang.String)}
     * and
     * {@link #JetSetSystemParameter(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, com.sun.jna.NativeLong, esent.EsentLibrary.JET_API_PTR, com.sun.jna.Pointer)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetSetSystemParameter(JET_INSTANCE*, JET_SESID, unsigned long, JET_API_PTR, const char*)</code><br>
     * <i>native declaration : esent.h:23</i>
     */
    int JetSetSystemParameter(EsentLibrary.JET_INSTANCE pinstance, EsentLibrary.JET_SESID sesid, NativeLong paramid, Pointer lParam, String sz);
//   int JetSetSystemParameter(EsentLibrary.JET_INSTANCE pinstance, EsentLibrary.JET_SESID sesid, NativeLong paramid, int lParam, String sz);
    /**
     * Original signature :
     * <code>JET_ERR JetGetSystemParameter(JET_INSTANCE, JET_SESID, unsigned long, JET_API_PTR*, char*, unsigned long)</code><br>
     * <i>native declaration : esent.h:25</i><br>
     *
     * 
     * {@link #JetGetSystemParameter(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, com.sun.jna.NativeLong, esent.EsentLibrary.JET_API_PTR, java.nio.ByteBuffer, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetSystemParameter(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, com.sun.jna.NativeLong, esent.EsentLibrary.JET_API_PTR, com.sun.jna.Pointer, com.sun.jna.NativeLong)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetGetSystemParameter(JET_INSTANCE, JET_SESID, unsigned long, JET_API_PTR*, char*, unsigned long)</code><br>
     * <i>native declaration : esent.h:25</i>
     */
    int JetGetSystemParameter(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_SESID sesid, NativeLong paramid, EsentLibrary.JET_API_PTR plParam, ByteBuffer sz, NativeLong cbMax);

    /**
     * Original signature :
     * <code>JET_ERR JetEnableMultiInstance(JET_SETSYSPARAM*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:27</i>
     */
    int JetEnableMultiInstance(EsentLibrary.JET_SETSYSPARAM psetsysparam, NativeLong csetsysparam, NativeLongByReference pcsetsucceed);

    /**
     * Original signature :
     * <code>JET_ERR JetBeginSession(JET_INSTANCE, JET_SESID*, const char*, const char*)</code><br>
     * <i>native declaration : esent.h:29</i><br>
     *
     * {@link #JetBeginSession(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, java.lang.String, java.lang.String)}
     * and
     * {@link #JetBeginSession(esent.EsentLibrary.JET_INSTANCE, esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.Pointer)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetBeginSession(JET_INSTANCE, JET_SESID*, const char*, const char*)</code><br>
     * <i>native declaration : esent.h:29</i>
     */
    int JetBeginSession(Pointer instance, PointerByReference psesid, String szUserName, String szPassword);

    /**
     * Original signature :
     * <code>JET_ERR JetDupSession(JET_SESID, JET_SESID*)</code><br>
     * <i>native declaration : esent.h:31</i>
     */
    int JetDupSession(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_SESID psesid);

    /**
     * Original signature :
     * <code>JET_ERR JetEndSession(JET_SESID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:33</i>
     */
    int JetEndSession(Pointer sesid, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetVersion(JET_SESID, unsigned long*)</code><br>
     * <i>native declaration : esent.h:35</i>
     */
    int JetGetVersion(EsentLibrary.JET_SESID sesid, NativeLongByReference pwVersion);

    /**
     * Original signature :
     * <code>JET_ERR JetIdle(JET_SESID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:37</i>
     */
    int JetIdle(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateDatabase(JET_SESID, const char*, const char*, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:39</i><br>
     *
     * 
     * {@link #JetCreateDatabase(esent.EsentLibrary.JET_SESID, java.lang.String, java.lang.String, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetCreateDatabase(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */

    /**
     * Original signature :
     * <code>JET_ERR JetCreateDatabase(JET_SESID, const char*, const char*, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:39</i>
     */
    int JetCreateDatabase(EsentLibrary.JET_SESID sesid, String szFilename, String szConnect, EsentLibrary.JET_DBID pdbid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateDatabase2(JET_SESID, const char*, const unsigned long, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:41</i><br>
     *
     * 
     * {@link #JetCreateDatabase2(esent.EsentLibrary.JET_SESID, java.lang.String, com.sun.jna.NativeLong, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetCreateDatabase2(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetCreateDatabase2(JET_SESID, const char*, const unsigned long, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:41</i>
     */
    int JetCreateDatabase2(EsentLibrary.JET_SESID sesid, String szFilename, NativeLong cpgDatabaseSizeMax, EsentLibrary.JET_DBID pdbid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetAttachDatabase(JET_SESID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:43</i><br>
     *
     * 
     * {@link #JetAttachDatabase(esent.EsentLibrary.JET_SESID, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetAttachDatabase(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetAttachDatabase(JET_SESID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:43</i>
     */
    int JetAttachDatabase(Pointer sesid, String szFilename, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetAttachDatabase2(JET_SESID, const char*, const unsigned long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:45</i><br>
     *
     * 
     * {@link #JetAttachDatabase2(esent.EsentLibrary.JET_SESID, java.lang.String, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetAttachDatabase2(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetAttachDatabase2(JET_SESID, const char*, const unsigned long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:45</i>
     */
    int JetAttachDatabase2(EsentLibrary.JET_SESID sesid, String szFilename, NativeLong cpgDatabaseSizeMax, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetDetachDatabase(JET_SESID, const char*)</code><br>
     * <i>native declaration : esent.h:47</i><br>
     *
     * 
     * {@link #JetDetachDatabase(esent.EsentLibrary.JET_SESID, java.lang.String)}
     * and
     * {@link #JetDetachDatabase(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetDetachDatabase(JET_SESID, const char*)</code><br>
     * <i>native declaration : esent.h:47</i>
     */
    int JetDetachDatabase(Pointer sesid, String szFilename);

    /**
     * Original signature :
     * <code>JET_ERR JetDetachDatabase2(JET_SESID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:49</i><br>
     *
     * 
     * {@link #JetDetachDatabase2(esent.EsentLibrary.JET_SESID, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetDetachDatabase2(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetDetachDatabase2(JET_SESID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:49</i>
     */
    int JetDetachDatabase2(EsentLibrary.JET_SESID sesid, String szFilename, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetObjectInfo(JET_SESID, JET_DBID, JET_OBJTYP, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:51</i><br>
     *
     * 
     * {@link #JetGetObjectInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_OBJTYP, java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetObjectInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_OBJTYP, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetGetObjectInfo(JET_SESID, JET_DBID, JET_OBJTYP, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:51</i>
     */
    int JetGetObjectInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, EsentLibrary.JET_OBJTYP objtyp, String szContainerName, String szObjectName, Pointer pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetGetTableInfo(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:53</i>
     */
    int JetGetTableInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, JET_COLUMNBASE pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateTable(JET_SESID, JET_DBID, const char*, unsigned long, unsigned long, JET_TABLEID*)</code><br>
     * <i>native declaration : esent.h:55</i><br>
     *
     * 
     * {@link #JetCreateTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_TABLEID)}
     * and
     * {@link #JetCreateTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_TABLEID)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetCreateTable(JET_SESID, JET_DBID, const char*, unsigned long, unsigned long, JET_TABLEID*)</code><br>
     * <i>native declaration : esent.h:55</i>
     */
    int JetCreateTable(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName, NativeLong lPages, NativeLong lDensity, EsentLibrary.JET_TABLEID ptableid);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateTableColumnIndex(JET_SESID, JET_DBID, JET_TABLECREATE*)</code><br>
     * <i>native declaration : esent.h:57</i>
     */
    int JetCreateTableColumnIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, EsentLibrary.JET_TABLECREATE ptablecreate);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateTableColumnIndex2(JET_SESID, JET_DBID, JET_TABLECREATE2*)</code><br>
     * <i>native declaration : esent.h:59</i>
     */
    int JetCreateTableColumnIndex2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, EsentLibrary.JET_TABLECREATE2 ptablecreate);

    /**
     * Original signature :
     * <code>JET_ERR JetDeleteTable(JET_SESID, JET_DBID, const char*)</code><br>
     * <i>native declaration : esent.h:61</i><br>
     *
     * 
     * {@link #JetDeleteTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String)}
     * and
     * {@link #JetDeleteTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetDeleteTable(JET_SESID, JET_DBID, const char*)</code><br>
     * <i>native declaration : esent.h:61</i>
     */
    int JetDeleteTable(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName);

    /**
     * Original signature :
     * <code>JET_ERR JetRenameTable(JET_SESID, JET_DBID, const char*, const char*)</code><br>
     * <i>native declaration : esent.h:63</i><br>
     *
     * 
     * {@link #JetRenameTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, java.lang.String)}
     * and
     * {@link #JetRenameTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.Pointer)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetRenameTable(JET_SESID, JET_DBID, const char*, const char*)</code><br>
     * <i>native declaration : esent.h:63</i>
     */
    int JetRenameTable(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szName, String szNameNew);

    /**
     * Original signature :
     * <code>JET_ERR JetGetTableColumnInfo(JET_SESID, JET_TABLEID, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:65</i><br>
     *
     * 
     * {@link #JetGetTableColumnInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetTableColumnInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetGetTableColumnInfo(JET_SESID, JET_TABLEID, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:65</i>
     */
    int JetGetTableColumnInfo(Pointer sesid, Pointer tableid, String szColumnName, JET_COLUMNBASE pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetGetColumnInfo(JET_SESID, JET_DBID, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:67</i><br>
     *
     * 
     * {@link #JetGetColumnInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetColumnInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetGetColumnInfo(JET_SESID, JET_DBID, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:67</i>
     */
    int JetGetColumnInfo(Pointer sesid, Pointer dbid, String szTableName, String szColumnName, Pointer pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetAddColumn(JET_SESID, JET_TABLEID, const char*, const JET_COLUMNDEF*, const void*, unsigned long, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:69</i><br>
     *
     * 
     * {@link #JetAddColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_COLUMNDEF[], com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_COLUMNID)}
     * and
     * {@link #JetAddColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_COLUMNDEF, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_COLUMNID)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetAddColumn(JET_SESID, JET_TABLEID, const char*, const JET_COLUMNDEF*, const void*, unsigned long, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:69</i>
     */
    int JetAddColumn(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szColumnName, EsentLibrary.JET_COLUMNDEF pcolumndef[], Pointer pvDefault, NativeLong cbDefault, EsentLibrary.JET_COLUMNID pcolumnid);

    /**
     * Original signature :
     * <code>JET_ERR JetDeleteColumn(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:71</i><br>
     *
     * @
     * {@link #JetDeleteColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String)}
     * and
     * {@link #JetDeleteColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetDeleteColumn(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:71</i>
     */
    int JetDeleteColumn(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szColumnName);

    /**
     * Original signature :
     * <code>JET_ERR JetDeleteColumn2(JET_SESID, JET_TABLEID, const char*, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:73</i><br>
     *
     * 
     * {@link #JetDeleteColumn2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetDeleteColumn2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetDeleteColumn2(JET_SESID, JET_TABLEID, const char*, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:73</i>
     */
    int JetDeleteColumn2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szColumnName, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetRenameColumn(JET_SESID, JET_TABLEID, const char*, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:75</i><br>
     *
     * 
     * {@link #JetRenameColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetRenameColumn(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetRenameColumn(JET_SESID, JET_TABLEID, const char*, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:75</i>
     */
    int JetRenameColumn(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szName, String szNameNew, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetSetColumnDefaultValue(JET_SESID, JET_DBID, const char*, const char*, const void*, const unsigned long, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:77</i><br>
     *
     * 
     * {@link #JetSetColumnDefaultValue(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetSetColumnDefaultValue(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetSetColumnDefaultValue(JET_SESID, JET_DBID, const char*, const char*, const void*, const unsigned long, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:77</i>
     */
    int JetSetColumnDefaultValue(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName, String szColumnName, Pointer pvData, NativeLong cbData, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetTableIndexInfo(JET_SESID, JET_TABLEID, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:79</i><br>
     *
     * 
     * {@link #JetGetTableIndexInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetTableIndexInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetGetTableIndexInfo(JET_SESID, JET_TABLEID, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:79</i>
     */
    int JetGetTableIndexInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName, Pointer pvResult, NativeLong cbResult, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetGetIndexInfo(JET_SESID, JET_DBID, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:81</i><br>
     *
     * 
     * {@link #JetGetIndexInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetIndexInfo(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetGetIndexInfo(JET_SESID, JET_DBID, const char*, const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:81</i>
     */
    int JetGetIndexInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName, String szIndexName, Pointer pvResult, NativeLong cbResult, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateIndex(JET_SESID, JET_TABLEID, const char*, JET_GRBIT, const char*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:83</i><br>
     *
     * 
     * {@link #JetCreateIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_GRBIT, java.lang.String, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetCreateIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
    int JetCreateIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer szIndexName, EsentLibrary.JET_GRBIT grbit, Pointer szKey, NativeLong cbKey, NativeLong lDensity);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateIndex(JET_SESID, JET_TABLEID, const char*, JET_GRBIT, const char*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:83</i>
     */
    int JetCreateIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName, EsentLibrary.JET_GRBIT grbit, String szKey, NativeLong cbKey, NativeLong lDensity);

    /**
     * Original signature :
     * <code>JET_ERR JetCreateIndex2(JET_SESID, JET_TABLEID, JET_INDEXCREATE*, unsigned long)</code><br>
     * <i>native declaration : esent.h:85</i>
     */
    int JetCreateIndex2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_INDEXCREATE pindexcreate, NativeLong cIndexCreate);

    /**
     * Original signature :
     * <code>JET_ERR JetDeleteIndex(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:87</i><br>
     *
     * 
     * {@link #JetDeleteIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String)}
     * and
     * {@link #JetDeleteIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetDeleteIndex(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:87</i>
     */
    int JetDeleteIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName);

    /**
     * Original signature :
     * <code>JET_ERR JetBeginTransaction(JET_SESID)</code><br>
     * <i>native declaration : esent.h:89</i>
     */
    int JetBeginTransaction(EsentLibrary.JET_SESID sesid);

    /**
     * Original signature :
     * <code>JET_ERR JetBeginTransaction2(JET_SESID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:91</i>
     */
    int JetBeginTransaction2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCommitTransaction(JET_SESID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:93</i>
     */
    int JetCommitTransaction(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetRollback(JET_SESID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:95</i>
     */
    int JetRollback(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetDatabaseInfo(JET_SESID, JET_DBID, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:97</i>
     */
    int JetGetDatabaseInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, Pointer pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetGetDatabaseFileInfo(const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:99</i><br>
     *
     *
     * {@link #JetGetDatabaseFileInfo(java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetDatabaseFileInfo(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetGetDatabaseFileInfo(const char*, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:99</i>
     */
    int JetGetDatabaseFileInfo(String szDatabaseName, PointerByReference pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenDatabase(JET_SESID, const char*, const char*, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:101</i><br>
     *
     *
     * {@link #JetOpenDatabase(esent.EsentLibrary.JET_SESID, java.lang.String, java.lang.String, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetOpenDatabase(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_DBID, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetOpenDatabase(JET_SESID, const char*, const char*, JET_DBID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:101</i>
     */
    int JetOpenDatabase(Pointer sesid, String szFilename, String szConnect, PointerByReference pdbid, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCloseDatabase(JET_SESID, JET_DBID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:103</i>
     */
    int JetCloseDatabase(Pointer sesid, Pointer dbid, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenTable(JET_SESID, JET_DBID, const char*, const void*, unsigned long, JET_GRBIT, JET_TABLEID*)</code><br>
     * <i>native declaration : esent.h:105</i><br>
     *
     * 
     * {@link #JetOpenTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID)}
     * and
     * {@link #JetOpenTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetOpenTable(JET_SESID, JET_DBID, const char*, const void*, unsigned long, JET_GRBIT, JET_TABLEID*)</code><br>
     * <i>native declaration : esent.h:105</i>
     */
    int JetOpenTable(Pointer sesid, Pointer dbid, String szTableName, Pointer pvParameters, NativeLong cbParameters, NativeLong grbit, PointerByReference ptableid);

    /**
     * Original signature :
     * <code>JET_ERR JetSetTableSequential(JET_SESID, JET_TABLEID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:107</i>
     */
    int JetSetTableSequential(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetResetTableSequential(JET_SESID, JET_TABLEID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:109</i>
     */
    int JetResetTableSequential(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCloseTable(JET_SESID, JET_TABLEID)</code><br>
     * <i>native declaration : esent.h:111</i>
     */
    int JetCloseTable(Pointer sesid, Pointer tableid);

    /**
     * Original signature :
     * <code>JET_ERR JetDelete(JET_SESID, JET_TABLEID)</code><br>
     * <i>native declaration : esent.h:113</i>
     */
    int JetDelete(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid);

    /**
     * Original signature :
     * <code>JET_ERR JetUpdate(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:115</i>
     */
    int JetUpdate(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvBookmark, NativeLong cbBookmark, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetUpdate2(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long*, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:117</i>
     */
    int JetUpdate2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvBookmark, NativeLong cbBookmark, NativeLongByReference pcbActual, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetEscrowUpdate(JET_SESID, JET_TABLEID, JET_COLUMNID, void*, unsigned long, void*, unsigned long, unsigned long*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:119</i>
     */
    int JetEscrowUpdate(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_COLUMNID columnid, Pointer pv, NativeLong cbMax, Pointer pvOld, NativeLong cbOldMax, NativeLongByReference pcbOldActual, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetRetrieveColumn(JET_SESID, JET_TABLEID, JET_COLUMNID, void*, unsigned long, unsigned long*, JET_GRBIT, JET_RETINFO*)</code><br>
     * <i>native declaration : esent.h:121</i>
     */
    int JetRetrieveColumn(Pointer sesid, Pointer tableid, NativeLong columnid, Memory buff, NativeLong cbData, PointerByReference pcbActual, NativeLong grbit, NativeLong pretinfo);

    /**
     * Original signature :
     * <code>JET_ERR JetRetrieveColumns(JET_SESID, JET_TABLEID, JET_RETRIEVECOLUMN*, unsigned long)</code><br>
     * <i>native declaration : esent.h:123</i>
     */
    int JetRetrieveColumns(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_RETRIEVECOLUMN pretrievecolumn, NativeLong cretrievecolumn);

    /**
     * Original signature :
     * <code>JET_ERR JetEnumerateColumns(JET_SESID, JET_TABLEID, unsigned long, JET_ENUMCOLUMNID*, unsigned long*, JET_ENUMCOLUMN**, JET_PFNREALLOC, void*, unsigned long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:125</i>
     */
    int JetEnumerateColumns(Pointer sesid, Pointer tableid, NativeLong cEnumColumnId, NativeLong rgEnumColumnId, NativeLongByReference pcEnumColumn, PointerByReference prgEnumColumn, EsentLibrary.JET_PFNREALLOC pfnRealloc, PointerByReference pvReallocContext, NativeLong cbDataMost, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetEnumerateColumns(JET_SESID, JET_TABLEID, unsigned long, JET_ENUMCOLUMNID*, unsigned long*, JET_ENUMCOLUMN**, JET_PFNREALLOC, void*, unsigned long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:125</i>
     */
    int JetEnumerateColumns(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, NativeLong cEnumColumnId, EsentLibrary.JET_ENUMCOLUMNID rgEnumColumnId, NativeLongByReference pcEnumColumn, EsentLibrary.JET_ENUMCOLUMN prgEnumColumn[], EsentLibrary.JET_PFNREALLOC pfnRealloc, Pointer pvReallocContext, NativeLong cbDataMost, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetSetColumn(JET_SESID, JET_TABLEID, JET_COLUMNID, const void*, unsigned long, JET_GRBIT, JET_SETINFO*)</code><br>
     * <i>native declaration : esent.h:127</i>
     */
    int JetSetColumn(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_COLUMNID columnid, Pointer pvData, NativeLong cbData, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_SETINFO psetinfo);

    /**
     * Original signature :
     * <code>JET_ERR JetSetColumns(JET_SESID, JET_TABLEID, JET_SETCOLUMN*, unsigned long)</code><br>
     * <i>native declaration : esent.h:129</i>
     */
    int JetSetColumns(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_SETCOLUMN psetcolumn, NativeLong csetcolumn);

    /**
     * Original signature :
     * <code>JET_ERR JetPrepareUpdate(JET_SESID, JET_TABLEID, unsigned long)</code><br>
     * <i>native declaration : esent.h:131</i>
     */
    int JetPrepareUpdate(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, NativeLong prep);

    /**
     * Original signature :
     * <code>JET_ERR JetGetRecordPosition(JET_SESID, JET_TABLEID, JET_RECPOS*, unsigned long)</code><br>
     * <i>native declaration : esent.h:133</i>
     */
    int JetGetRecordPosition(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_RECPOS precpos, NativeLong cbRecpos);

    /**
     * Original signature :
     * <code>JET_ERR JetGotoPosition(JET_SESID, JET_TABLEID, JET_RECPOS*)</code><br>
     * <i>native declaration : esent.h:135</i>
     */
    int JetGotoPosition(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_RECPOS precpos);

    /**
     * Original signature :
     * <code>JET_ERR JetGetCursorInfo(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long)</code><br>
     * <i>native declaration : esent.h:137</i>
     */
    int JetGetCursorInfo(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvResult, NativeLong cbMax, NativeLong InfoLevel);

    /**
     * Original signature :
     * <code>JET_ERR JetDupCursor(JET_SESID, JET_TABLEID, JET_TABLEID*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:139</i>
     */
    int JetDupCursor(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_TABLEID ptableid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetCurrentIndex(JET_SESID, JET_TABLEID, char*, unsigned long)</code><br>
     * <i>native declaration : esent.h:141</i><br>
     *
     * 
     * {@link #JetGetCurrentIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.nio.ByteBuffer, com.sun.jna.NativeLong)}
     * and
     * {@link #JetGetCurrentIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, com.sun.jna.NativeLong)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetGetCurrentIndex(JET_SESID, JET_TABLEID, char*, unsigned long)</code><br>
     * <i>native declaration : esent.h:141</i>
     */
    int JetGetCurrentIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, ByteBuffer szIndexName, NativeLong cchIndexName);

    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:143</i><br>
     *
     * 
     * {@link #JetSetCurrentIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String)}
     * and
     * {@link #JetSetCurrentIndex(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex(JET_SESID, JET_TABLEID, const char*)</code><br>
     * <i>native declaration : esent.h:143</i>
     */
    int JetSetCurrentIndex(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName);

    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex2(JET_SESID, JET_TABLEID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:145</i><br>
     *
     * 
     * {@link #JetSetCurrentIndex2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetSetCurrentIndex2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex2(JET_SESID, JET_TABLEID, const char*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:145</i>
     */
    int JetSetCurrentIndex2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex3(JET_SESID, JET_TABLEID, const char*, JET_GRBIT, unsigned long)</code><br>
     * <i>native declaration : esent.h:147</i><br>
     *
     * 
     * {@link #JetSetCurrentIndex3(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_GRBIT, com.sun.jna.NativeLong)}
     * and
     * {@link #JetSetCurrentIndex3(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT, com.sun.jna.NativeLong)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex3(JET_SESID, JET_TABLEID, const char*, JET_GRBIT, unsigned long)</code><br>
     * <i>native declaration : esent.h:147</i>
     */
    int JetSetCurrentIndex3(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName, EsentLibrary.JET_GRBIT grbit, NativeLong itagSequence);

    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex4(JET_SESID, JET_TABLEID, const char*, JET_INDEXID*, JET_GRBIT, unsigned long)</code><br>
     * <i>native declaration : esent.h:149</i><br>
     *
     * 
     * {@link #JetSetCurrentIndex4(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, java.lang.String, esent.EsentLibrary.JET_INDEXID, esent.EsentLibrary.JET_GRBIT, com.sun.jna.NativeLong)}
     * and
     * {@link #JetSetCurrentIndex4(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_TABLEID, com.sun.jna.Pointer, esent.EsentLibrary.JET_INDEXID, esent.EsentLibrary.JET_GRBIT, com.sun.jna.NativeLong)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetSetCurrentIndex4(JET_SESID, JET_TABLEID, const char*, JET_INDEXID*, JET_GRBIT, unsigned long)</code><br>
     * <i>native declaration : esent.h:149</i>
     */
    int JetSetCurrentIndex4(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, String szIndexName, EsentLibrary.JET_INDEXID pindexid, EsentLibrary.JET_GRBIT grbit, NativeLong itagSequence);

    /**
     * Original signature :
     * <code>JET_ERR JetMove(JET_SESID, JET_TABLEID, long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:151</i>
     */
    int JetMove(Pointer sesid, Pointer tableid, NativeLong cRow, NativeLong grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetLock(JET_SESID, JET_TABLEID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:153</i>
     */
    int JetGetLock(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetMakeKey(JET_SESID, JET_TABLEID, const void*, unsigned long, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:155</i>
     */
    int JetMakeKey(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvData, NativeLong cbData, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetSeek(JET_SESID, JET_TABLEID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:157</i>
     */
    int JetSeek(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetBookmark(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:159</i>
     */
    int JetGetBookmark(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvBookmark, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetGetSecondaryIndexBookmark(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long*, void*, unsigned long, unsigned long*, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:161</i>
     */
    int JetGetSecondaryIndexBookmark(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvSecondaryKey, NativeLong cbSecondaryKeyMax, NativeLongByReference pcbSecondaryKeyActual, Pointer pvPrimaryBookmark, NativeLong cbPrimaryBookmarkMax, NativeLongByReference pcbPrimaryKeyActual, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetCompact(JET_SESID, const char*, const char*, JET_PFNSTATUS, JET_CONVERT*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:163</i><br>
     *
     * 
     * {@link #JetCompact(esent.EsentLibrary.JET_SESID, java.lang.String, java.lang.String, esent.EsentLibrary.JET_PFNSTATUS, esent.EsentLibrary.JET_CONVERT, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetCompact(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_PFNSTATUS, esent.EsentLibrary.JET_CONVERT, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetCompact(JET_SESID, const char*, const char*, JET_PFNSTATUS, JET_CONVERT*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:163</i>
     */
    int JetCompact(EsentLibrary.JET_SESID sesid, String szDatabaseSrc, String szDatabaseDest, EsentLibrary.JET_PFNSTATUS pfnStatus, EsentLibrary.JET_CONVERT pconvert, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetDefragment(JET_SESID, JET_DBID, const char*, unsigned long*, unsigned long*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:165</i><br>
     *
     * 
     * {@link #JetDefragment(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetDefragment(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetDefragment(JET_SESID, JET_DBID, const char*, unsigned long*, unsigned long*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:165</i>
     */
    int JetDefragment(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName, NativeLongByReference pcPasses, NativeLongByReference pcSeconds, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetDefragment2(JET_SESID, JET_DBID, const char*, unsigned long*, unsigned long*, JET_CALLBACK, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:167</i><br>
     *
     * 
     * {@link #JetDefragment2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, java.lang.String, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_CALLBACK, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetDefragment2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_DBID, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_CALLBACK, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetDefragment2(JET_SESID, JET_DBID, const char*, unsigned long*, unsigned long*, JET_CALLBACK, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:167</i>
     */
    int JetDefragment2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, String szTableName, NativeLongByReference pcPasses, NativeLongByReference pcSeconds, EsentLibrary.JET_CALLBACK callback, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetDefragment3(JET_SESID, const char*, const char*, unsigned long*, unsigned long*, JET_CALLBACK, void*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:169</i><br>
     *
     * 
     * {@link #JetDefragment3(esent.EsentLibrary.JET_SESID, java.lang.String, java.lang.String, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_CALLBACK, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * and
     * {@link #JetDefragment3(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_CALLBACK, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetDefragment3(JET_SESID, const char*, const char*, unsigned long*, unsigned long*, JET_CALLBACK, void*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:169</i>
     */
    int JetDefragment3(EsentLibrary.JET_SESID vsesid, String szDatabaseName, String szTableName, NativeLongByReference pcPasses, NativeLongByReference pcSeconds, EsentLibrary.JET_CALLBACK callback, Pointer pvContext, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetSetDatabaseSize(JET_SESID, const char*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:171</i><br>
     *
     * 
     * {@link #JetSetDatabaseSize(esent.EsentLibrary.JET_SESID, java.lang.String, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)}
     * and
     * {@link #JetSetDatabaseSize(esent.EsentLibrary.JET_SESID, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)}
     * instead
     */
    
    /**
     * Original signature :
     * <code>JET_ERR JetSetDatabaseSize(JET_SESID, const char*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:171</i>
     */
    int JetSetDatabaseSize(EsentLibrary.JET_SESID sesid, String szDatabaseName, NativeLong cpg, NativeLongByReference pcpgReal);

    /**
     * Original signature :
     * <code>JET_ERR JetGrowDatabase(JET_SESID, JET_DBID, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:173</i>
     */
    int JetGrowDatabase(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_DBID dbid, NativeLong cpg, NativeLongByReference pcpgReal);

    /**
     * Original signature :
     * <code>JET_ERR JetSetSessionContext(JET_SESID, JET_API_PTR)</code><br>
     * <i>native declaration : esent.h:175</i>
     */
    int JetSetSessionContext(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_API_PTR ulContext);

    /**
     * Original signature :
     * <code>JET_ERR JetResetSessionContext(JET_SESID)</code><br>
     * <i>native declaration : esent.h:177</i>
     */
    int JetResetSessionContext(EsentLibrary.JET_SESID sesid);

    /**
     * Original signature :
     * <code>JET_ERR JetGotoBookmark(JET_SESID, JET_TABLEID, void*, unsigned long)</code><br>
     * <i>native declaration : esent.h:179</i>
     */
    int JetGotoBookmark(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvBookmark, NativeLong cbBookmark);

    /**
     * Original signature :
     * <code>JET_ERR JetGotoSecondaryIndexBookmark(JET_SESID, JET_TABLEID, void*, unsigned long, void*, unsigned long, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:181</i>
     */
    int JetGotoSecondaryIndexBookmark(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvSecondaryKey, NativeLong cbSecondaryKey, Pointer pvPrimaryBookmark, NativeLong cbPrimaryBookmark, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetIntersectIndexes(JET_SESID, JET_INDEXRANGE*, unsigned long, JET_RECORDLIST*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:183</i>
     */
    int JetIntersectIndexes(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_INDEXRANGE rgindexrange, NativeLong cindexrange, EsentLibrary.JET_RECORDLIST precordlist, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetComputeStats(JET_SESID, JET_TABLEID)</code><br>
     * <i>native declaration : esent.h:185</i>
     */
    int JetComputeStats(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable(JET_SESID, const JET_COLUMNDEF*, unsigned long, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:187</i><br>
     *
     * 
     * {@link #JetOpenTempTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF[], com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * and
     * {@link #JetOpenTempTable(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable(JET_SESID, const JET_COLUMNDEF*, unsigned long, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:187</i>
     */
    int JetOpenTempTable(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_COLUMNDEF prgcolumndef[], NativeLong ccolumn, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_TABLEID ptableid, EsentLibrary.JET_COLUMNID prgcolumnid);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable2(JET_SESID, const JET_COLUMNDEF*, unsigned long, unsigned long, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:189</i><br>
     *
     * 
     * {@link #JetOpenTempTable2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF[], com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * and
     * {@link #JetOpenTempTable2(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF, com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable2(JET_SESID, const JET_COLUMNDEF*, unsigned long, unsigned long, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:189</i>
     */
    int JetOpenTempTable2(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_COLUMNDEF prgcolumndef[], NativeLong ccolumn, NativeLong lcid, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_TABLEID ptableid, EsentLibrary.JET_COLUMNID prgcolumnid);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable3(JET_SESID, const JET_COLUMNDEF*, unsigned long, JET_UNICODEINDEX*, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:191</i><br>
     *
     * 
     * {@link #JetOpenTempTable3(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF[], com.sun.jna.NativeLong, esent.EsentLibrary.JET_UNICODEINDEX, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * and
     * {@link #JetOpenTempTable3(esent.EsentLibrary.JET_SESID, esent.EsentLibrary.JET_COLUMNDEF, com.sun.jna.NativeLong, esent.EsentLibrary.JET_UNICODEINDEX, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_TABLEID, esent.EsentLibrary.JET_COLUMNID)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetOpenTempTable3(JET_SESID, const JET_COLUMNDEF*, unsigned long, JET_UNICODEINDEX*, JET_GRBIT, JET_TABLEID*, JET_COLUMNID*)</code><br>
     * <i>native declaration : esent.h:191</i>
     */
    int JetOpenTempTable3(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_COLUMNDEF prgcolumndef[], NativeLong ccolumn, EsentLibrary.JET_UNICODEINDEX pidxunicode, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_TABLEID ptableid, EsentLibrary.JET_COLUMNID prgcolumnid);

    /**
     * Original signature :
     * <code>JET_ERR JetBackup(const char*, JET_GRBIT, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:193</i><br>
     *
     * 
     * {@link #JetBackup(java.lang.String, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetBackup(com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetBackup(const char*, JET_GRBIT, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:193</i>
     */
    int JetBackup(String szBackupPath, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_PFNSTATUS pfnStatus);

    /**
     * Original signature :
     * <code>JET_ERR JetBackupInstance(JET_INSTANCE, const char*, JET_GRBIT, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:195</i><br>
     *
     * 
     * {@link #JetBackupInstance(esent.EsentLibrary.JET_INSTANCE, java.lang.String, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetBackupInstance(esent.EsentLibrary.JET_INSTANCE, com.sun.jna.Pointer, esent.EsentLibrary.JET_GRBIT, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetBackupInstance(JET_INSTANCE, const char*, JET_GRBIT, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:195</i>
     */
    int JetBackupInstance(EsentLibrary.JET_INSTANCE instance, String szBackupPath, EsentLibrary.JET_GRBIT grbit, EsentLibrary.JET_PFNSTATUS pfnStatus);

    /**
     * Original signature :
     * <code>JET_ERR JetRestore(const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:197</i><br>
     *
     * 
     * {@link #JetRestore(java.lang.String, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetRestore(com.sun.jna.Pointer, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
    /**
     * Original signature :
     * <code>JET_ERR JetRestore(const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:197</i>
     */
    int JetRestore(String sz, EsentLibrary.JET_PFNSTATUS pfn);

    /**
     * Original signature :
     * <code>JET_ERR JetRestore2(const char*, const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:199</i><br>
     *
     * 
     * {@link #JetRestore2(java.lang.String, java.lang.String, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetRestore2(com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetRestore2(const char*, const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:199</i>
     */
    int JetRestore2(String sz, String szDest, EsentLibrary.JET_PFNSTATUS pfn);

    /**
     * Original signature :
     * <code>JET_ERR JetRestoreInstance(JET_INSTANCE, const char*, const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:201</i><br>
     *
     * 
     * {@link #JetRestoreInstance(esent.EsentLibrary.JET_INSTANCE, java.lang.String, java.lang.String, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetRestoreInstance(esent.EsentLibrary.JET_INSTANCE, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
  
    /**
     * Original signature :
     * <code>JET_ERR JetRestoreInstance(JET_INSTANCE, const char*, const char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:201</i>
     */
    int JetRestoreInstance(EsentLibrary.JET_INSTANCE instance, String sz, String szDest, EsentLibrary.JET_PFNSTATUS pfn);

    /**
     * Original signature :
     * <code>JET_ERR JetSetIndexRange(JET_SESID, JET_TABLEID, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:203</i>
     */
    int JetSetIndexRange(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableidSrc, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetIndexRecordCount(JET_SESID, JET_TABLEID, unsigned long*, unsigned long)</code><br>
     * <i>native declaration : esent.h:205</i>
     */
    int JetIndexRecordCount(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, NativeLongByReference pcrec, NativeLong crecMax);

    /**
     * Original signature :
     * <code>JET_ERR JetRetrieveKey(JET_SESID, JET_TABLEID, void*, unsigned long, unsigned long*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:207</i>
     */
    int JetRetrieveKey(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, Pointer pvData, NativeLong cbMax, NativeLongByReference pcbActual, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetBeginExternalBackup(JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:209</i>
     */
    int JetBeginExternalBackup(EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetBeginExternalBackupInstance(JET_INSTANCE, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:211</i>
     */
    int JetBeginExternalBackupInstance(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetAttachInfo(void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:213</i>
     */
    int JetGetAttachInfo(Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetGetAttachInfoInstance(JET_INSTANCE, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:215</i>
     */
    int JetGetAttachInfoInstance(EsentLibrary.JET_INSTANCE instance, Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenFile(const char*, JET_HANDLE*, unsigned long*, unsigned long*)</code><br>
     * <i>native declaration : esent.h:217</i><br>
     *
     * 
     * {@link #JetOpenFile(java.lang.String, esent.EsentLibrary.JET_HANDLE, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)}
     * and
     * {@link #JetOpenFile(com.sun.jna.Pointer, esent.EsentLibrary.JET_HANDLE, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)}
     * instead
 
    /**
     * Original signature :
     * <code>JET_ERR JetOpenFile(const char*, JET_HANDLE*, unsigned long*, unsigned long*)</code><br>
     * <i>native declaration : esent.h:217</i>
     */
    int JetOpenFile(String szFileName, EsentLibrary.JET_HANDLE phfFile, NativeLongByReference pulFileSizeLow, NativeLongByReference pulFileSizeHigh);

    /**
     * Original signature :
     * <code>JET_ERR JetOpenFileInstance(JET_INSTANCE, const char*, JET_HANDLE*, unsigned long*, unsigned long*)</code><br>
     * <i>native declaration : esent.h:219</i><br>
     *
     * 
     * {@link #JetOpenFileInstance(esent.EsentLibrary.JET_INSTANCE, java.lang.String, esent.EsentLibrary.JET_HANDLE, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)}
     * and
     * {@link #JetOpenFileInstance(esent.EsentLibrary.JET_INSTANCE, com.sun.jna.Pointer, esent.EsentLibrary.JET_HANDLE, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetOpenFileInstance(JET_INSTANCE, const char*, JET_HANDLE*, unsigned long*, unsigned long*)</code><br>
     * <i>native declaration : esent.h:219</i>
     */
    int JetOpenFileInstance(EsentLibrary.JET_INSTANCE instance, String szFileName, EsentLibrary.JET_HANDLE phfFile, NativeLongByReference pulFileSizeLow, NativeLongByReference pulFileSizeHigh);

    /**
     * Original signature :
     * <code>JET_ERR JetReadFile(JET_HANDLE, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:221</i>
     */
    int JetReadFile(EsentLibrary.JET_HANDLE hfFile, Pointer pv, NativeLong cb, NativeLongByReference pcb);

    /**
     * Original signature :
     * <code>JET_ERR JetReadFileInstance(JET_INSTANCE, JET_HANDLE, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:223</i>
     */
    int JetReadFileInstance(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_HANDLE hfFile, Pointer pv, NativeLong cb, NativeLongByReference pcb);

    /**
     * Original signature : <code>JET_ERR JetCloseFile(JET_HANDLE)</code><br>
     * <i>native declaration : esent.h:225</i>
     */
    int JetCloseFile(EsentLibrary.JET_HANDLE hfFile);

    /**
     * Original signature :
     * <code>JET_ERR JetCloseFileInstance(JET_INSTANCE, JET_HANDLE)</code><br>
     * <i>native declaration : esent.h:227</i>
     */
    int JetCloseFileInstance(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_HANDLE hfFile);

    /**
     * Original signature :
     * <code>JET_ERR JetGetLogInfo(void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:229</i>
     */
    int JetGetLogInfo(Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetGetLogInfoInstance(JET_INSTANCE, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:231</i>
     */
    int JetGetLogInfoInstance(EsentLibrary.JET_INSTANCE instance, Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature :
     * <code>JET_ERR JetGetLogInfoInstance2(JET_INSTANCE, void*, unsigned long, unsigned long*, JET_LOGINFO*)</code><br>
     * <i>native declaration : esent.h:233</i>
     */
    int JetGetLogInfoInstance2(EsentLibrary.JET_INSTANCE instance, Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual, EsentLibrary.JET_LOGINFO pLogInfo);

    /**
     * Original signature :
     * <code>JET_ERR JetGetTruncateLogInfoInstance(JET_INSTANCE, void*, unsigned long, unsigned long*)</code><br>
     * <i>native declaration : esent.h:235</i>
     */
    int JetGetTruncateLogInfoInstance(EsentLibrary.JET_INSTANCE instance, Pointer pv, NativeLong cbMax, NativeLongByReference pcbActual);

    /**
     * Original signature : <code>JET_ERR JetTruncateLog()</code><br>
     * <i>native declaration : esent.h:237</i>
     */
    int JetTruncateLog();

    /**
     * Original signature :
     * <code>JET_ERR JetTruncateLogInstance(JET_INSTANCE)</code><br>
     * <i>native declaration : esent.h:239</i>
     */
    int JetTruncateLogInstance(EsentLibrary.JET_INSTANCE instance);

    /**
     * Original signature : <code>JET_ERR JetEndExternalBackup()</code><br>
     * <i>native declaration : esent.h:241</i>
     */
    int JetEndExternalBackup();

    /**
     * Original signature :
     * <code>JET_ERR JetEndExternalBackupInstance(JET_INSTANCE)</code><br>
     * <i>native declaration : esent.h:243</i>
     */
    int JetEndExternalBackupInstance(EsentLibrary.JET_INSTANCE instance);

    /**
     * Original signature :
     * <code>JET_ERR JetEndExternalBackupInstance2(JET_INSTANCE, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:245</i>
     */
    int JetEndExternalBackupInstance2(EsentLibrary.JET_INSTANCE instance, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetExternalRestore(char*, char*, JET_RSTMAP*, long, char*, long, long, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:247</i><br>
     *
     * 
     * {@link #JetExternalRestore(java.nio.ByteBuffer, java.nio.ByteBuffer, esent.EsentLibrary.JET_RSTMAP, com.sun.jna.NativeLong, java.nio.ByteBuffer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetExternalRestore(com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_RSTMAP, com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
    /**
     * Original signature :
     * <code>JET_ERR JetExternalRestore(char*, char*, JET_RSTMAP*, long, char*, long, long, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:247</i>
     */
    int JetExternalRestore(ByteBuffer szCheckpointFilePath, ByteBuffer szLogPath, EsentLibrary.JET_RSTMAP rgstmap, NativeLong crstfilemap, ByteBuffer szBackupLogPath, NativeLong genLow, NativeLong genHigh, EsentLibrary.JET_PFNSTATUS pfn);

    /**
     * Original signature :
     * <code>JET_ERR JetExternalRestore2(char*, char*, JET_RSTMAP*, long, char*, JET_LOGINFO*, char*, char*, char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:249</i><br>
     *
     * 
     * {@link #JetExternalRestore2(java.nio.ByteBuffer, java.nio.ByteBuffer, esent.EsentLibrary.JET_RSTMAP, com.sun.jna.NativeLong, java.nio.ByteBuffer, esent.EsentLibrary.JET_LOGINFO, java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer, esent.EsentLibrary.JET_PFNSTATUS)}
     * and
     * {@link #JetExternalRestore2(com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_RSTMAP, com.sun.jna.NativeLong, com.sun.jna.Pointer, esent.EsentLibrary.JET_LOGINFO, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, esent.EsentLibrary.JET_PFNSTATUS)}
     * instead
     */
 
    /**
     * Original signature :
     * <code>JET_ERR JetExternalRestore2(char*, char*, JET_RSTMAP*, long, char*, JET_LOGINFO*, char*, char*, char*, JET_PFNSTATUS)</code><br>
     * <i>native declaration : esent.h:249</i>
     */
    int JetExternalRestore2(ByteBuffer szCheckpointFilePath, ByteBuffer szLogPath, EsentLibrary.JET_RSTMAP rgstmap, NativeLong crstfilemap, ByteBuffer szBackupLogPath, EsentLibrary.JET_LOGINFO pLogInfo, ByteBuffer szTargetInstanceName, ByteBuffer szTargetInstanceLogPath, ByteBuffer szTargetInstanceCheckpointPath, EsentLibrary.JET_PFNSTATUS pfn);

    /**
     * Original signature :
     * <code>JET_ERR JetRegisterCallback(JET_SESID, JET_TABLEID, JET_CBTYP, JET_CALLBACK, void*, JET_HANDLE*)</code><br>
     * <i>native declaration : esent.h:251</i>
     */
    int JetRegisterCallback(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_CBTYP cbtyp, EsentLibrary.JET_CALLBACK pCallback, Pointer pvContext, EsentLibrary.JET_HANDLE phCallbackId);

    /**
     * Original signature :
     * <code>JET_ERR JetUnregisterCallback(JET_SESID, JET_TABLEID, JET_CBTYP, JET_HANDLE)</code><br>
     * <i>native declaration : esent.h:253</i>
     */
    int JetUnregisterCallback(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_CBTYP cbtyp, EsentLibrary.JET_HANDLE hCallbackId);

    /**
     * Original signature :
     * <code>JET_ERR JetGetInstanceInfo(unsigned long*, JET_INSTANCE_INFO**)</code><br>
     * <i>native declaration : esent.h:255</i>
     */
    int JetGetInstanceInfo(NativeLongByReference pcInstanceInfo, PointerByReference paInstanceInfo);

    /**
     * Original signature :
     * <code>JET_ERR JetGetInstanceInfo(unsigned long*, JET_INSTANCE_INFO**)</code><br>
     * <i>native declaration : esent.h:255</i>
     */
    int JetGetInstanceInfo(NativeLongByReference pcInstanceInfo, EsentLibrary.JET_INSTANCE_INFO paInstanceInfo[]);

    /**
     * Original signature : <code>JET_ERR JetFreeBuffer(char*)</code><br>
     * <i>native declaration : esent.h:257</i><br>
     *
     * 
     * {@link #JetFreeBuffer(java.nio.ByteBuffer)} and
     * {@link #JetFreeBuffer(com.sun.jna.Pointer)} instead
     */
  
    /**
     * Original signature : <code>JET_ERR JetFreeBuffer(char*)</code><br>
     * <i>native declaration : esent.h:257</i>
     */
    int JetFreeBuffer(ByteBuffer pbBuf);

    /**
     * Original signature :
     * <code>JET_ERR JetSetLS(JET_SESID, JET_TABLEID, JET_LS, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:259</i>
     */
    int JetSetLS(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_LS ls, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetGetLS(JET_SESID, JET_TABLEID, JET_LS*, JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:261</i>
     */
    int JetGetLS(EsentLibrary.JET_SESID sesid, EsentLibrary.JET_TABLEID tableid, EsentLibrary.JET_LS pls, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetOSSnapshotPrepare(JET_OSSNAPID*, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:263</i>
     */
    int JetOSSnapshotPrepare(EsentLibrary.JET_OSSNAPID psnapId, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetOSSnapshotFreeze(const JET_OSSNAPID, unsigned long*, JET_INSTANCE_INFO**, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:265</i><br>
     *
     * 
     * {@link #JetOSSnapshotFreeze(esent.EsentLibrary.JET_OSSNAPID, com.sun.jna.ptr.NativeLongByReference, esent.EsentLibrary.JET_INSTANCE_INFO[], esent.EsentLibrary.JET_GRBIT)}
     * instead
     */
   
    /**
     * Original signature :
     * <code>JET_ERR JetOSSnapshotFreeze(const JET_OSSNAPID, unsigned long*, JET_INSTANCE_INFO**, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:265</i>
     */
    int JetOSSnapshotFreeze(EsentLibrary.JET_OSSNAPID snapId, NativeLongByReference pcInstanceInfo, EsentLibrary.JET_INSTANCE_INFO paInstanceInfo[], EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetOSSnapshotThaw(const JET_OSSNAPID, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:267</i>
     */
    int JetOSSnapshotThaw(EsentLibrary.JET_OSSNAPID snapId, EsentLibrary.JET_GRBIT grbit);

    /**
     * Original signature :
     * <code>JET_ERR JetOSSnapshotAbort(const JET_OSSNAPID, const JET_GRBIT)</code><br>
     * <i>native declaration : esent.h:269</i>
     */
    int JetOSSnapshotAbort(EsentLibrary.JET_OSSNAPID snapId, EsentLibrary.JET_GRBIT grbit);

    public static class JET_ENUMCOLUMNID extends PointerType {

        public JET_ENUMCOLUMNID(Pointer address) {
            super(address);
        }

        public JET_ENUMCOLUMNID() {
            super();
        }
    };

    public static class JET_RETINFO extends PointerType {

        public JET_RETINFO(Pointer address) {
            super(address);
        }

        public JET_RETINFO() {
            super();
        }
    };

    public static class JET_SESID extends PointerType {

        public JET_SESID(Pointer address) {
            super(address);
        }

        public JET_SESID() {
            super();
        }
    };

    public static class JET_DBID extends PointerType {

        public JET_DBID(Pointer address) {
            super(address);
        }

        public JET_DBID() {
            super();
        }
    };

    public static class JET_RSTMAP extends PointerType {

        public JET_RSTMAP(Pointer address) {
            super(address);
        }

        public JET_RSTMAP() {
            super();
        }
    };

    public static class JET_INDEXID extends PointerType {

        public JET_INDEXID(Pointer address) {
            super(address);
        }

        public JET_INDEXID() {
            super();
        }
    };

    public static class JET_PFNSTATUS extends PointerType {

        public JET_PFNSTATUS(Pointer address) {
            super(address);
        }

        public JET_PFNSTATUS() {
            super();
        }
    };

    public static class JET_ENUMCOLUMN extends PointerType {

        public JET_ENUMCOLUMN(Pointer address) {
            super(address);
        }

        public JET_ENUMCOLUMN() {
            super();
        }
    };

    public static class JET_COLUMNID extends PointerType {

        public JET_COLUMNID(Pointer address) {
            super(address);
        }

        public JET_COLUMNID() {
            super();
        }
    };

    public static class JET_RECPOS extends PointerType {

        public JET_RECPOS(Pointer address) {
            super(address);
        }

        public JET_RECPOS() {
            super();
        }
    };

    public static class JET_LOGINFO extends PointerType {

        public JET_LOGINFO(Pointer address) {
            super(address);
        }

        public JET_LOGINFO() {
            super();
        }
    };

    public static class JET_TABLECREATE2 extends PointerType {

        public JET_TABLECREATE2(Pointer address) {
            super(address);
        }

        public JET_TABLECREATE2() {
            super();
        }
    };

    public static class JET_RETRIEVECOLUMN extends PointerType {

        public JET_RETRIEVECOLUMN(Pointer address) {
            super(address);
        }

        public JET_RETRIEVECOLUMN() {
            super();
        }
    };

    public static class JET_CALLBACK extends PointerType {

        public JET_CALLBACK(Pointer address) {
            super(address);
        }

        public JET_CALLBACK() {
            super();
        }
    };

    public static class JET_API_PTR extends PointerType {

        public JET_API_PTR(Pointer address) {
            super(address);
        }

        public JET_API_PTR() {
            super();
        }
    };

    public static class JET_CBTYP extends PointerType {

        public JET_CBTYP(Pointer address) {
            super(address);
        }

        public JET_CBTYP() {
            super();
        }
    };

    public static class JET_INDEXCREATE extends PointerType {

        public JET_INDEXCREATE(Pointer address) {
            super(address);
        }

        public JET_INDEXCREATE() {
            super();
        }
    };

    public static class JET_SETCOLUMN extends PointerType {

        public JET_SETCOLUMN(Pointer address) {
            super(address);
        }

        public JET_SETCOLUMN() {
            super();
        }
    };

    public static class JET_INSTANCE_INFO extends PointerType {

        public JET_INSTANCE_INFO(Pointer address) {
            super(address);
        }

        public JET_INSTANCE_INFO() {
            super();
        }
    };

    public static class JET_UNICODEINDEX extends PointerType {

        public JET_UNICODEINDEX(Pointer address) {
            super(address);
        }

        public JET_UNICODEINDEX() {
            super();
        }
    };

    public static class JET_PFNREALLOC extends Structure implements Structure.ByReference {

        public Pointer pvContext;
        public Pointer pv;
        public NativeLong cb;

        JET_PFNREALLOC(Pointer pvReallocContext, Pointer pv, NativeLong cb) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        protected List<String> getFieldOrder() {
            return Arrays.asList("pvContext", "pv", "cb");
        }
    };

    public static class JET_INSTANCE extends PointerType {

        public JET_INSTANCE(Pointer address) {
            super(address);
        }

        public JET_INSTANCE() {
            super();
        }
    };

    public static class JET_CONVERT extends PointerType {

        public JET_CONVERT(Pointer address) {
            super(address);
        }

        public JET_CONVERT() {
            super();
        }
    };

    public static class JET_SETSYSPARAM extends PointerType {

        public JET_SETSYSPARAM(Pointer address) {
            super(address);
        }

        public JET_SETSYSPARAM() {
            super();
        }
    };

    public static class JET_TABLEID extends PointerType {

        public JET_TABLEID(Pointer address) {
            super(address);
        }

        public JET_TABLEID() {
            super();
        }
    };

    public static class JET_OSSNAPID extends PointerType {

        public JET_OSSNAPID(Pointer address) {
            super(address);
        }

        public JET_OSSNAPID() {
            super();
        }
    };

    public static class JET_ERR extends PointerType {

        public JET_ERR(Pointer address) {
            super(address);
        }

        public JET_ERR() {
            super();
        }
    };

    public static class JET_OBJTYP extends PointerType {

        public JET_OBJTYP(Pointer address) {
            super(address);
        }

        public JET_OBJTYP() {
            super();
        }
    };

    public static class JET_RECORDLIST extends PointerType {

        public JET_RECORDLIST(Pointer address) {
            super(address);
        }

        public JET_RECORDLIST() {
            super();
        }
    };

    public static class JET_GRBIT extends PointerType {

        public JET_GRBIT(Pointer address) {
            super(address);
        }

        public JET_GRBIT() {
            super();
        }
    };

    public static class JET_COLUMNDEF extends PointerType {

        public JET_COLUMNDEF(Pointer address) {
            super(address);
        }

        public JET_COLUMNDEF() {
            super();
        }
    };

    public static class JET_TABLECREATE extends PointerType {

        public JET_TABLECREATE(Pointer address) {
            super(address);
        }

        public JET_TABLECREATE() {
            super();
        }
    };

    public static class JET_LS extends PointerType {

        public JET_LS(Pointer address) {
            super(address);
        }

        public JET_LS() {
            super();
        }
    };

    public static class JET_SETINFO extends PointerType {

        public JET_SETINFO(Pointer address) {
            super(address);
        }

        public JET_SETINFO() {
            super();
        }
    };

    public static class JET_INDEXRANGE extends PointerType {

        public JET_INDEXRANGE(Pointer address) {
            super(address);
        }

        public JET_INDEXRANGE() {
            super();
        }
    };

    public static class JET_HANDLE extends PointerType {

        public JET_HANDLE(Pointer address) {
            super(address);
        }

        public JET_HANDLE() {
            super();
        }
    };

    public static class JET_COLUMNBASE extends Structure {

        public static class ByValue extends JET_COLUMNBASE implements Structure.ByValue {
        }
        public NativeLong cbStruct;
//        public byte[] cbStruct  = new byte[58];
        public NativeLong columnid;
//       public byte[] columnid = new byte[58];
        public NativeLong coltyp;
//        public byte[] coltyp = new byte[58];
        public short Country;
//        public byte[] Country = new byte[58];
        public short langid;
//        public byte[] langid = new byte[58];
        public short cp;
//        public byte[] cp = new byte[58];
        public short wFiller;
//        public byte[] wFiller = new byte[58];
        public NativeLong cbMax;
//        public byte[] cbMax = new char[58];
      public NativeLong grbit;
    //    public byte[] grbit = new byte[58];
        public char[] szBaseTableName = new char[256];
        public char[] szBaseColumnName = new char[256];

       
        @Override
        protected List<String> getFieldOrder() {
        //cbMax.setValue(64);    
        return Arrays.asList("cbStruct", "columnid", "coltyp", "Country", "langid", "cp", "wFiller", "cbMax", "grbit", "szBaseTableName", "szBaseColumnName");
        //   return Arrays.asList ("Country", "cbMax", "cbStruct", "coltyp", "columnid", "cp", "grbit", "langid", "szBaseColumnName", "szBaseTableName", "wFiller");
        }
    }
                

}
